# .github/workflows/deploy.yml

# 工作流名称
name: Deploy VitePress Site to GitHub Pages

on:
  # 触发条件：推送到 main 分支时触发
  push:
    branches: [main]

# 允许此工作流写入 gh-pages 分支以进行部署
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    # 指定运行环境
    runs-on: ubuntu-latest
    steps:
      # 步骤1: 拉取代码
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取所有历史记录，VitePress 需要它来获取 git 相关元数据

      # 步骤2: 设置 pnpm (如果用 npm 或 yarn, 请相应修改)
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8 # 指定 pnpm 版本

      # 步骤3: 设置 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 推荐使用 LTS 版本的 Node.js
          cache: 'pnpm' # 缓存依赖，加快构建速度

      # 步骤4: 安装依赖
      - name: Install dependencies
        run: pnpm install 

      # 步骤5: 构建 VitePress 网站
      # 请确保你的 package.json 中有 "docs:build": "vitepress build docs" 这样的脚本
      - name: Build with VitePress
        run: pnpm docs:build

      # 步骤6: 配置 GitHub Pages
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      # 步骤7: 上传构建产物
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # VitePress 构建输出的默认目录
          path: docs/.vitepress/dist

      # 步骤8: 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4